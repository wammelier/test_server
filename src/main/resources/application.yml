# Server
spring:
  application:
    name: kcp-channel
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://ec2-52-78-1-207.ap-northeast-2.compute.amazonaws.com:3306/APISRV?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=UTC&allowMultiQueries=true
    name: root
    password: apiserver
    username: apiserver
    sql-script-encoding: "UTF-8"
  cache:
   ehcache:
      config: classpath:ehcache.xml
  output:
    ansi:
      enabled: always
#  kafka:
#    bootstrap-servers: dev-kafka01.asia-northeast3-a.c.protean-triode-289510.internal:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
server:
  port: 88

# Jwt
jwt.token.secret-key: 11
jwt.token.expire-length: 11

# Mybatis
mybatis:
  type-aliases-package: com.kcp.poc.channel.model.*
  configuration:
    map-underscore-to-camel-case: true

# Camel
camel:
  springboot:
    auto-startup: true
    use-mdc-logging: true # log
  component:
    kafka:
#      brokers: dev-kafka01.asia-northeast3-a.c.protean-triode-289510.internal:9092
      configuration:
        key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        sasl-jaas-config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
        security-protocol: SASL_PLAINTEXT
        sasl-mechanism: PLAIN
#  dataformat:
#    json-jackson:
#      disable-features: WRITE_DATES_AS_TIMESTAMPS
#      object-mapper: jacksonObjectMapper

# jks (https를 위한 설정)
jks:
  resource: mykeystore.jks
  password: apiserver

